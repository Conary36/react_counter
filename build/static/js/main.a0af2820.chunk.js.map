{"version":3,"sources":["Counter.js","CounterHooks.js","App.js","index.js"],"names":["Counter","props","state","count","initialCount","console","log","ThemeContext","Consumer","style","onClick","changeCount","amount","this","setState","prevState","Component","CounterHooks","useState","setCount","useContext","prevCount","React","createContext","App","theme","setTheme","Provider","value","backgroundColor","prevTheme","ReactDOM","render","document","getElementById"],"mappings":"oMAGqBA,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,MAAOF,EAAMG,cAJF,E,sEAQT,IAAD,OAEL,OADAC,QAAQC,IAAI,kBAER,kBAACC,EAAaC,SAAd,MACK,SAAAC,GAAK,OACV,6BACI,4BAASA,MAAOA,EAAOC,QAAS,kBAAM,EAAKC,aAAa,KAAxD,KACI,8BAAO,EAAKT,MAAMC,OACtB,4BAAQM,MAAOA,EAAQC,QAAS,kBAAM,EAAKC,YAAY,KAAvD,W,kCAOAC,GACRC,KAAKC,UAAS,SAAAC,GACV,MAAO,CAAEZ,MAAOY,EAAUZ,MAAQS,U,GA1BTI,aCAtB,SAASC,EAAT,GAAyC,IAAjBb,EAAgB,EAAhBA,aACnCC,QAAQC,IAAI,wBADuC,MAEzBY,mBAASd,GAFgB,mBAE5CD,EAF4C,KAErCgB,EAFqC,KAG7CV,EAAQW,qBAAWb,GACzB,OACI,6BACI,4BAAQE,MAAOA,EAAMC,QAAS,kBAAMS,GAAS,SAAAE,GAAS,OAAIA,EAAY,OAAtE,KACA,8BAAOlB,GACP,4BAAQM,MAAOA,EAAMC,QAAS,kBAAMS,GAAS,SAAAE,GAAS,OAAIA,EAAY,OAAtE,MCPL,IAAMd,EAAee,IAAMC,gBAiBnBC,MAff,WACEnB,QAAQC,IAAI,cADC,MAEYY,mBAAS,OAFrB,mBAENO,EAFM,KAECC,EAFD,KAGb,OACE,kBAACnB,EAAaoB,SAAd,CAAuBC,MAAO,CAACC,gBAAiBJ,IAAhD,UAEE,kBAAC,EAAD,CAASrB,aAAc,IAFzB,gBAIE,kBAACa,EAAD,CAAcb,aAAc,IAC5B,4BAAQM,QAAS,kBAAMgB,GAAS,SAAAI,GAC9B,MAAqB,QAAdA,EAAqB,OAAQ,WADtC,kBCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a0af2820.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {ThemeContext} from './App'\n\nexport default class Counter extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            count: props.initialCount\n        }\n    }\n\n    render() {\n        console.log(\"Render Counter\")\n        return (\n            <ThemeContext.Consumer>\n                {style =>(\n            <div>\n                <button  style={style} onClick={() => this.changeCount(-1)}>-</button>\n                    <span>{this.state.count}</span>\n                <button style={style}  onClick={() => this.changeCount(1)}>+</button>\n            </div>\n                )}\n            </ThemeContext.Consumer>\n        )\n    }\n\n    changeCount(amount) {\n        this.setState(prevState => {\n            return { count: prevState.count + amount }\n        })\n    }\n}\n","import React, { useState, useContext } from 'react'\nimport {ThemeContext } from './App'\n\nexport default function CounterHooks({ initialCount }) {\n    console.log('Render Counter Hooks')\n    const [count, setCount] = useState(initialCount)\n    const style = useContext(ThemeContext)\n    return (\n        <div>\n            <button style={style}onClick={() => setCount(prevCount => prevCount - 1)}>-</button>\n            <span>{count}</span>\n            <button style={style}onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport Counter from './Counter'\nimport CounterHooks from './CounterHooks'\n\nexport const ThemeContext = React.createContext()\n\nfunction App() {\n  console.log(\"Render App\");\n  const [theme, setTheme]= useState('red')\n  return (\n    <ThemeContext.Provider value={{backgroundColor: theme}}>\n      Counter\n      <Counter initialCount={0} />\n      Counter Hooks\n      <CounterHooks initialCount={0} />\n      <button onClick={() => setTheme(prevTheme => {\n        return prevTheme === 'red' ?'blue': 'red'\n      })}>Toggle Theme</button>\n    </ThemeContext.Provider>\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}