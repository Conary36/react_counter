{"ast":null,"code":"import _slicedToArray from\"/Users/Brave/WebSimplified/react_counter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Counter from'./Counter';import CounterHooks from'./CounterHooks';export var ThemeContext=React.createContext();function App(){console.log(\"Render App\");var _useState=useState('red'),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];return React.createElement(ThemeContext.Provider,{value:{backgroundColor:theme}},\"Counter\",React.createElement(Counter,{initialCount:0}),\"Counter Hooks\",React.createElement(CounterHooks,{initialCount:0}),React.createElement(\"button\",{onClick:function onClick(){return setTheme(function(prevTheme){return prevTheme==='red'?'blue':'red';});}},\"Toggle Theme\"));}export default App;","map":{"version":3,"sources":["/Users/Brave/WebSimplified/react_counter/src/App.js"],"names":["React","useState","Counter","CounterHooks","ThemeContext","createContext","App","console","log","theme","setTheme","backgroundColor","prevTheme"],"mappings":"2HAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAGJ,KAAK,CAACK,aAAN,EAArB,CAEP,QAASC,CAAAA,GAAT,EAAe,CACbC,OAAO,CAACC,GAAR,CAAY,YAAZ,EADa,cAEYP,QAAQ,CAAC,KAAD,CAFpB,wCAENQ,KAFM,eAECC,QAFD,eAGb,MACE,qBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAACC,eAAe,CAAEF,KAAlB,CAA9B,YAEE,oBAAC,OAAD,EAAS,YAAY,CAAE,CAAvB,EAFF,iBAIE,oBAAC,YAAD,EAAc,YAAY,CAAE,CAA5B,EAJF,CAKE,8BAAQ,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAAC,SAAAE,SAAS,CAAI,CAC3C,MAAOA,CAAAA,SAAS,GAAK,KAAd,CAAqB,MAArB,CAA6B,KAApC,CACD,CAF8B,CAAd,EAAjB,iBALF,CADF,CAWD,CACD,cAAeN,CAAAA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport Counter from './Counter'\nimport CounterHooks from './CounterHooks'\n\nexport const ThemeContext = React.createContext()\n\nfunction App() {\n  console.log(\"Render App\");\n  const [theme, setTheme]= useState('red')\n  return (\n    <ThemeContext.Provider value={{backgroundColor: theme}}>\n      Counter\n      <Counter initialCount={0} />\n      Counter Hooks\n      <CounterHooks initialCount={0} />\n      <button onClick={() => setTheme(prevTheme => {\n        return prevTheme === 'red' ?'blue': 'red'\n      })}>Toggle Theme</button>\n    </ThemeContext.Provider>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}