{"ast":null,"code":"import _slicedToArray from \"/Users/Brave/WebSimplified/react_counter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Brave/WebSimplified/react_counter/src/App.js\";\nimport React, { useState } from 'react';\nimport Counter from './Counter';\nimport CounterHooks from './CounterHooks';\nexport const ThemeContext = React.createContext();\n\nfunction App() {\n  console.log(\"Render App\");\n\n  const _useState = useState('red'),\n        _useState2 = _slicedToArray(_useState, 2),\n        theme = _useState2[0],\n        setTheme = _useState2[1];\n\n  return React.createElement(ThemeContext.Provider, {\n    value: {\n      backgroundColor: theme\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Counter\", React.createElement(Counter, {\n    initialCount: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), \"Counter Hooks\", React.createElement(CounterHooks, {\n    initialCount: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setTheme(prevTheme => {\n      return prevTheme === 'red' ? 'blue' : 'red';\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Toggle Theme\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Brave/WebSimplified/react_counter/src/App.js"],"names":["React","useState","Counter","CounterHooks","ThemeContext","createContext","App","console","log","theme","setTheme","backgroundColor","prevTheme"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,KAAK,CAACK,aAAN,EAArB;;AAEP,SAASC,GAAT,GAAe;AACbC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AADa,oBAEYP,QAAQ,CAAC,KAAD,CAFpB;AAAA;AAAA,QAENQ,KAFM;AAAA,QAECC,QAFD;;AAGb,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAEF;AAAlB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE,oBAAC,OAAD;AAAS,IAAA,YAAY,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,mBAIE,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACE,SAAS,IAAI;AAC3C,aAAOA,SAAS,KAAK,KAAd,GAAqB,MAArB,GAA6B,KAApC;AACD,KAF8B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CADF;AAWD;;AACD,eAAeN,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport Counter from './Counter'\nimport CounterHooks from './CounterHooks'\n\nexport const ThemeContext = React.createContext()\n\nfunction App() {\n  console.log(\"Render App\");\n  const [theme, setTheme]= useState('red')\n  return (\n    <ThemeContext.Provider value={{backgroundColor: theme}}>\n      Counter\n      <Counter initialCount={0} />\n      Counter Hooks\n      <CounterHooks initialCount={0} />\n      <button onClick={() => setTheme(prevTheme => {\n        return prevTheme === 'red' ?'blue': 'red'\n      })}>Toggle Theme</button>\n    </ThemeContext.Provider>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}