{"ast":null,"code":"var _jsxFileName = \"/Users/Brave/WebSimplified/react_counter/src/Counter.js\";\nimport React, { Component } from 'react';\nexport default class Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: props.initialCount\n    };\n  }\n\n  render() {\n    console.log('Render Counter');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.changeCount(-1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.state.count), React.createElement(\"button\", {\n      onClick: () => this.changeCount(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"+\"));\n  }\n\n  changeCount(amount) {\n    // this.setState({count: this.state.count + amount})asychronous \n    this.setState(prevState => {\n      return {\n        count: prevState.count + amount\n      }; //calls the previos state...this is function version\n    }); // this.setState({count: 0})//this defaults state to 0\n    // this.setState(prevState =>{\n    //     return{ count: prevState.count + amount}//this is easy to set state back...non function\n    // })\n  }\n\n}","map":{"version":3,"sources":["/Users/Brave/WebSimplified/react_counter/src/Counter.js"],"names":["React","Component","Counter","constructor","props","state","count","initialCount","render","console","log","changeCount","amount","setState","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAC1CE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAEF,KAAK,CAACG;AADN,KAAX;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAK,KAAKC,WAAL,CAAiB,CAAC,CAAlB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKN,KAAL,CAAWC,KAAlB,CAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKK,WAAL,CAAiB,CAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CADA;AAOH;;AAELA,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf;AACA,SAAKC,QAAL,CAAcC,SAAS,IAAG;AACtB,aAAO;AAACR,QAAAA,KAAK,EAAEQ,SAAS,CAACR,KAAV,GAAkBM;AAA1B,OAAP,CADsB,CACkB;AAC3C,KAFD,EAFe,CAKf;AACA;AACA;AACA;AACH;;AA7B6C","sourcesContent":["import React, {Component} from 'react';\n\nexport default class Counter extends Component{\n    constructor(props){\n        super(props)\n\n        this.state={\n            count: props.initialCount\n        }\n    }\n\n    render(){\n        console.log('Render Counter')\n        return(\n        <div>\n            <button onClick={()=> this.changeCount(-1)}>-</button>\n            <span>{this.state.count}</span>\n            <button onClick={() => this.changeCount(1)}>+</button>\n        </div>\n        )\n    }\n\nchangeCount(amount){\n    // this.setState({count: this.state.count + amount})asychronous \n    this.setState(prevState =>{\n        return {count: prevState.count + amount}//calls the previos state...this is function version\n    })\n    // this.setState({count: 0})//this defaults state to 0\n    // this.setState(prevState =>{\n    //     return{ count: prevState.count + amount}//this is easy to set state back...non function\n    // })\n}\n}"]},"metadata":{},"sourceType":"module"}